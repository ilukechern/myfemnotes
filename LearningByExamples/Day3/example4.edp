int nn = 3200;

int[int] ls = [1, 1, 1, 1, 1, 1];
mesh Th = square(nn, nn, label=ls);

if(mpirank == 0)
{
    cout << Th.nt << endl;
}

include "macro_ddm.idp"

DmeshCreate(Th);

cout <<"rank {" + mpirank + "} has " + Th.nt << " elements" << endl;

// plotDmesh(Th, cmm="Distributed mesh");

fespace Vh(Th, P1);

macro Grad(u) [dx(u), dy(u)] //EOM

func f = 2.0*pi^2*sin(pi*x)*sin(pi*y);

varf vPoisson(u, v) = int2d(Th) (Grad(u)' * Grad(v))
                    + int2d(Th) (f*v)
                    + on(1, u = 0)
                    ;

load "PETSc"
Mat A;
MatCreate(Th, A, P1);

A = vPoisson(Vh, Vh);
real[int] rhs = vPoisson(0, Vh);

Vh sol;
set(A, sparams = "-pc_type hypre -ksp_max_it 50 -ksp_rtol 1e-18");
sol[] = A^-1 * rhs;
// plotD(Th, sol, cmm="disp");

int[int] fforder = [1];
savevtk("./output/poisson.vtu", Th, sol, dataname="u", order=fforder);

